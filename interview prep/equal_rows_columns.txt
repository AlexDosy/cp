function equalPairs(grid: number[][]): number {
    const n=grid.length
    const rMap= new Map<string, number>();

    for(let i=0; i<n;i++){
        const key=grid[i].join(',');
        rMap.set(key,(rMap.get(key)||0)+1)
    }

    let count =0

    for (let j=0;j<n;j++){
        const col:number[]=[]
        for (let i=0;i<n;i++){
            col.push(grid[i][j])
        }
        const cKey=col.join(',');
        if(rMap.has(cKey)){
            count+=rMap.get(cKey)!;
        }
    }
    return count
};

rowMap.get(colKey)!
This is a TypeScript-specific operator that tells the compiler:
“I know this value is not undefined or null, so stop complaining about it.”
Because:
Map.get() can return undefined,
But we already checked if (rowMap.has(colKey)), so we know get(colKey) is safe,
So we assert non-null with !.