we are using sliding window to find maximum no of vowels here
    const isVowel = (ch: string) => 'aeiou'.includes(ch);


    const vowels = new Set(['a', 'e', 'i', 'o', 'u']);
    



function maxVowels(s: string, k: number): number {
    const vowels = new Set(['a','e','i','o','u'])
    let maxCount =0
    let currentCount =0

    for (let i=0;i<k;i++){
        if(vowels.has(s[i])){
            currentCount++;
        }
    }
    maxCount=currentCount;

    for (let i=k;i<s.length;i++){
        if(vowels.has(s[i])){
            currentCount++
        }
        if(vowels.has(s[i-k])){
            currentCount--
        }
        maxCount = Math.max(maxCount, currentCount)
    }
    return maxCount
};




least complex soln
function maxVowels(s: string, k: number): number {
    const n = s.length;
    const arr = new Uint8Array(n);

    for (let i = 0; i < n; i++) {
        const ch = s[i];
        arr[i] = (ch === 'a' || ch === 'e' || ch === 'i' || ch === 'o' || ch === 'u') ? 1 : 0;
    }

    let count = 0;
    for (let i = 0; i < k; i++) count += arr[i];
    let maxCount = count;

    for (let i = k; i < n; i++) {
        count += arr[i] - arr[i - k];
        if (count > maxCount) maxCount = count;
        if (maxCount === k) return k;
    }

  return maxCount;

};



